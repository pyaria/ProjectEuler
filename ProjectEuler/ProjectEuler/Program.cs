using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProjectEuler
{
    class Program
    {
        static void Main(string[] args)
        {
            var problemNo = int.Parse(args[0]);
            var question = GetQuestion(problemNo);
            var answer = GetAnswer(problemNo);
            Console.WriteLine(question);
            Console.WriteLine(answer);
            Console.Read();
        }

        private static string GetQuestion(int problemNo)
        {
            switch (problemNo)
            {
                case 1: return $@"If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. 
The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.";
                case 2: return $@"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
                case 3: return $@"The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?";
                case 4: return $@"A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.
Find the largest palindrome made from the product of two 3-digit numbers.";
                case 5: return $@"2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?";
                case 6: return $@"The sum of the squares of the first ten natural numbers is,
1^2 + 2^2 + ... + 10^2 = 385
The square of the sum of the first ten natural numbers is,
(1 + 2 + ... + 10)^2 = 55^2 = 3025
Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.
Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.";
                default: return $"No description has been entered for problem #{problemNo} yet";
            }
        }

        private static object GetAnswer(int problemNo)
        {
            switch (problemNo)
            {
                case 1: return RunProblem1();
                case 2: return RunProblem2();
                case 3: return RunProblem3();
                default: return "Problem not yet solved/implemented/in system";
            }
        }

        private static int RunProblem3()
        {
            throw new NotImplementedException();
        }

        private static int RunProblem2()
        {
            var fibonnaciSeq = GetEvenFibonnaci(4000000);
            return fibonnaciSeq.Sum();
        }
        private static IEnumerable<int> GetEvenFibonnaci(int belowThisNumber)
        {
            var fibonnaciSeq = GetFibonnaciWhileLessThan(belowThisNumber);
            foreach (var term in fibonnaciSeq) if (term % 2 == 0) yield return term;
        }
        private static IEnumerable<int> GetFibonnaciWhileLessThan(int belowThisNumber)
        {
            yield return 1;
            yield return 2;
            var prevTwoAway = 1;
            var lastTerm = 2;
            var fibonnaciTerm = GetNextFibonnaciTerm(prevTwoAway, lastTerm);
           
            while (fibonnaciTerm < belowThisNumber)
            {
                yield return fibonnaciTerm;
                prevTwoAway = lastTerm;
                lastTerm = fibonnaciTerm;
                fibonnaciTerm = GetNextFibonnaciTerm(prevTwoAway, fibonnaciTerm);
            }
        }
        private static int GetNextFibonnaciTerm(int prevTwoAway, int lastTerm)
        {
            return prevTwoAway + lastTerm;
        }

        private static int RunProblem1()
        {
            var multiplesOf3 = GetMultiplesBelowANumber(3, 1000);
            Console.WriteLine(string.Join(", ", multiplesOf3));
            var multiplesOf5 = GetMultiplesBelowANumber(5, 1000);
            Console.WriteLine(string.Join(", ", multiplesOf5));
            var distinct = multiplesOf3.Concat(multiplesOf5).Distinct();
            return distinct.Sum();
        }
        private static int MultipleNumbers(IEnumerable<int> numbers)
        {
            var multiple = numbers.First();
            foreach (var number in numbers.Skip(1))
            {
                multiple *= number;
            }
            return multiple;
        }
        private static IEnumerable<int> GetMultiplesBelowANumber(int multiplesOfNumber, int belowThisNumber)
        {
            var i = 1;
            while (i * multiplesOfNumber < belowThisNumber)
            {
                yield return i * multiplesOfNumber;
                i++;
            }
        }
    }
}
